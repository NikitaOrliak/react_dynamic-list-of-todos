{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","selectedTodo","setSelectedTodo","isSelected","id","className","classNames","completed","title","type","onClick","TodoList","todos","map","TodoFilter","setTodos","useState","input","setInput","query","setQuery","useEffect","newTodos","text","filter","sort","todo1","todo2","toLowerCase","includes","getSortedTodos","onSubmit","event","preventDefault","value","onChange","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectTodo","selectedUser","setSelectedUser","loader","setLoader","userId","finally","href","email","name","App","sortedTodos","setSortedTodos","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1b67050.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void,\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  setSelectedTodo = () => {},\n}) => {\n  const isSelected = todo.id === selectedTodo?.id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({ 'has-background-info-light': isSelected })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-success': todo.completed,\n          'has-text-danger': !todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames({\n              'far fa-eye': !isSelected,\n              'far fa-eye-slash': isSelected,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n\n// fas fa-check\n// far fa-eye-slash\n// far fa-eye\n\n// <tr data-cy=\"todo\" className=\"has-background-info-light\">\n//         <td className=\"is-vcentered\">2</td>\n//         <td className=\"is-vcentered\" />\n//         <td className=\"is-vcentered is-expanded\">\n//           <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n//         </td>\n//         <td className=\"has-text-right is-vcentered\">\n//           <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n//             <span className=\"icon\">\n//               <i className=\"far fa-eye-slash\" />\n//             </span>\n//           </button>\n//         </td>\n//       </tr>\n\n//       <tr data-cy=\"todo\" className=\"\">\n//         <td className=\"is-vcentered\">1</td>\n//         <td className=\"is-vcentered\" />\n//         <td className=\"is-vcentered is-expanded\">\n//           <p className=\"has-text-danger\">delectus aut autem</p>\n//         </td>\n//         <td className=\"has-text-right is-vcentered\">\n//           <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n//             <span className=\"icon\">\n//               <i className=\"far fa-eye\" />\n//             </span>\n//           </button>\n//         </td>\n//       </tr>\n\n//       <tr data-cy=\"todo\" className=\"\">\n//         <td className=\"is-vcentered\">6</td>\n//         <td className=\"is-vcentered\" />\n//         <td className=\"is-vcentered is-expanded\">\n//           <p className=\"has-text-danger\">\n//             qui ullam ratione quibusdam voluptatem quia omnis\n//           </p>\n//         </td>\n//         <td className=\"has-text-right is-vcentered\">\n//           <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n//             <span className=\"icon\">\n//               <i className=\"far fa-eye\" />\n//             </span>\n//           </button>\n//         </td>\n//       </tr>\n\n//       <tr data-cy=\"todo\" className=\"\">\n//         <td className=\"is-vcentered\">8</td>\n//         <td className=\"is-vcentered\">\n//           <span className=\"icon\" data-cy=\"iconCompleted\">\n//             <i className=\"fas fa-check\" />\n//           </span>\n//         </td>\n//         <td className=\"is-vcentered is-expanded\">\n//           <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n//         </td>\n//         <td className=\"has-text-right is-vcentered\">\n//           <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n//             <span className=\"icon\">\n//               <i className=\"far fa-eye\" />\n//             </span>\n//           </button>\n//         </td>\n//       </tr>\n","import React from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[] | null,\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo = () => {},\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos && todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          key={todo.id}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Query } from '../../types/Query';\n\ninterface Props {\n  todos: Todo[] | null;\n  setTodos: (todos: Todo[]) => void;\n}\n\nconst getSortedTodos = (\n  todos: Todo[] | null,\n  query?: Query,\n  text?: string,\n): Todo[] => {\n  if (!todos) {\n    return [];\n  }\n\n  let newTodos = [...todos];\n\n  if (query) {\n    switch (query) {\n      case 'active': {\n        newTodos = newTodos.filter(todo => !todo.completed);\n\n        break;\n      }\n\n      case 'completed': {\n        newTodos = newTodos.filter(todo => todo.completed);\n\n        break;\n      }\n\n      default:\n        newTodos = newTodos.sort(\n          (todo1, todo2) => todo1.id - todo2.id,\n        );\n\n        break;\n    }\n  }\n\n  if (text) {\n    newTodos = newTodos\n      .filter(todo => todo.title.toLowerCase().includes(text.toLowerCase()));\n  }\n\n  return newTodos;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todos,\n  setTodos = () => { },\n}) => {\n  const [input, setInput] = useState('');\n  const [query, setQuery] = useState<Query>('all');\n\n  useEffect(() => {\n    const newTodos = getSortedTodos(todos, query, input);\n\n    setTodos(newTodos);\n  }, [query, input]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.target.value);\n  };\n\n  const clearInput = () => {\n    setInput('');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={query}\n            onChange={event => setQuery(event.target.value as Query)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={input}\n          onChange={handleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {\n          !!input.length && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={clearInput}\n              />\n            </span>\n          )\n        }\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo | null;\n  selectTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectTodo = () => {},\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    if (todo) {\n      getUser(todo.userId)\n        .then(setSelectedUser)\n        .finally(() => setLoader(false));\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loader\n        ? (\n          <Loader />\n        )\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => selectTodo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className={classNames({\n                  'has-text-danger': !todo?.completed,\n                  'has-text-success': todo?.completed,\n                })}\n                >\n                  {todo?.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${selectedUser?.email}`}>\n                  {selectedUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [sortedTodos, setSortedTodos] = useState<Todo[] | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    getTodos()\n      .then((response) => {\n        setTodos(response);\n        setSortedTodos(response);\n      })\n      .finally(() => setLoader(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter todos={todos} setTodos={setSortedTodos} />\n            </div>\n\n            <div className=\"block\">\n              {loader && (\n                <Loader />\n              )}\n              <TodoList todos={sortedTodos} selectedTodo={selectedTodo} setSelectedTodo={setSelectedTodo} />\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        selectedTodo && (\n          <TodoModal\n            todo={selectedTodo}\n            selectTodo={setSelectedTodo}\n          />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}